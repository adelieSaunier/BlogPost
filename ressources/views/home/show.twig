{% extends "layouts/default.twig" %}
{% block stylesheet %}
    <style>
    </style>
{% endblock %}
{% block content %}

<section id="article-section">
    <div id="post-details">
        <h1 class="heading">{{post.title}}</h1>
        <p class="info">{{post.content}}</p>
        <p>{{post.created_at}}</p>
        <a href="{{ route('post.index') }}">Retour</a>
    </div>
</section>
    
   

<section id="postedcomments-section">


    <div id="comm">
        {% for comment in comments %}
            <div class="comment">
                <p>{{comment.user.lastname}}</p>
                <p class="comment-content">{{comment.content}}</p>
                <p>{{comment.created_at}}</p>
            </div>    
        {% endfor %}
        
    </div>
</section>     
    {% if auth.status == null %}
        <p>Laisser un commentaire <a href="{{ route('user.login') }}">se connecter</a></p>          
        
        {% else %}
           
        <section id="comment-section">


            <div class="like-unlike">
                <a 
                    href="{{ route( 'dislike')}}" 
                    id="dislike" 
                    class="favorite" 
                    data-post="{{ post.id }}" 
                    data-user="{{ user_id }}" 
                    type="submit" value="0" 
                    >Dislike
                    <i class="fa fa-thumbs-down"></i>
                </a> 

                <a href="{{ route('like' )}}" id="like" class="favorite" data-post="{{post.id}}" data-user="{{ user_id }}" value="1" >Like<i class="fa fa-thumbs-up"></i></a>

            
            </div>
            
           

           <!-- CREATION COMMENTAIRE -->

            <div id="createcomment">
                <form action="{{ route('comment.create') }}" method="post">
                    <div>
                        <input type="hidden" name="user_id" value="{{user_id}}" > <!--ENVOYER L'ID de mon utilisateur session-->
                        <input type="hidden" name="post_id" value="{{post.id}}" >
                    </div>
                    <div>
                        <label for="title-comment">TItre</label><br>
                        <input type="text" name="title-comment" id="title-comment">
                        {% for error in errors.title %}
                            {{error}}
                        {% endfor %}
                    </div>

                    <div>
                        <label for="comment">Commentaire</label> <br>
                        <textarea name="comment" id="" cols="30" rows="10"></textarea>
                        {% for error in errors.content %}
                            {{error}}
                        {% endfor %}
                    </div>
                    <button type="submit">Laisser un commentaire</button>
                </form>
            </div>
        </section>

    {% endif %} 
    
{% endblock %}

{% block javascripts %}
<script>

    let likebutton = document.getElementById("like");
    let unlikebutton = document.getElementById("dislike");
    //console.log(likebutton)
    likebutton.addEventListener("click", like );
    unlikebutton.addEventListener("click", dislike );

    function like(event){
        event.preventDefault()

        console.log('coucou');
        //url dans le href
        let post_id = this.getAttribute("data-post")
        //console.log(post_id)
        let user_id = this.getAttribute("data-user")
        //console.log(user_id)
        fetch(this.getAttribute("href"), {
            //on peut passer des params : methode, datas
            method: 'POST', 
            body: JSON.stringify({ 'post_id':post_id, 'user_id':user_id }), 
             
        })
        
        //recup reponse serveur
        .then(function(response){
            console.log(response)
            return response.json()
        })

        //traitement de la reponse
        .then(function(json){
            //reponse à l'utilisateur
            //console.log(json)
        })
    }


    function dislike(event){
        event.preventDefault()
        let post_id = this.getAttribute("data-post")
        let user_id = this.getAttribute("data-user")
        //url dans le href
        fetch(this.getAttribute("href"), {
            //on peut passer des params : methode,
            method: 'POST', 
            body: JSON.stringify({ 'post_id':post_id, 'user_id':user_id }),

        })
        //recup reponse serveur
        .then(function(response){
            return response.json()
        })
        //traitement de la reponse
        .then(function(json){
            //reponse à l'utilisateur
            console.log(json)
        }).catch(e=>alert(e))
    }

</script>

{% endblock %}
